resource links:
> https://open-flash.github.io/mirrors/swf-spec-19.pdf
> https://help.adobe.com/en_US/as3/dev/index.html
> https://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/

File extenstion: .swf

Basic Data Types:
> Coordinates
  |> xy in a unit called "twips"
  |> 20 twip = 1 logical pixel
  |> logical pixel
    |> depends on the scaling, equals screen pixel when playet at 100% aka no scaling
  |> x: increasing left to right
  |> y: increasing top to bottom
> Integers
  |> 8, 16, 32, 64, signed and unsigned
  |> little-endian byte order, (inside bytes big-endian order)
  |> alignemt: 1 byte
  |> signed: 2's complement
  |> (int/uint arrays)
  |> notation:
    |> SI  - signed
    |> UI  - unsigned
    |> [n] - array of [n] elements	 
> Encoded integers
  |> variable length
  |> encoded U32
> Fixed point numbers
  |> 16, 32
  |> little-endian byte order (eg: 7.5 -> 0x0007.8000 -> 00 80 07 00)
  |> alignment: 1 byte
  |> (8.8 signed)
> Floating point numbers
  |> IEEE 754
  |> half, signle, double precision
> Bit values
  |> [n] bits
  |> signed, unsigned, 16.16 fixed point number;
  |> alignemt: 1 bit (none)
  |> conversion
    |> unsigned -> larger: left pad with 0
    |> signed -> larger: left pad with high bit
  |> notation:
    |> UB[n] - unsigned bit
	|> SB[n] - signed bit
	|> FB[n] - Fixed point bit
> Strings
  |> Data: UI8[n] != 0, n >= 0
  |> End: UI8: 0
  |> UTF-8 encoding
> Language codes
  |> NOT text encoding
  |> spoken language
> Color
  |> RGB: UI8[3]
  |> ARGB, RGBA: UI8[4]
    |> alpha: 0 transparent, 255 opaque
> Complex structures (records)
  page 22
  |> Rectange
  |> Matrix
  page 24
  |> Color transform
> SWF structure
  |> header -> file attributes tag -> tag -> tag -> (...) -> End tag
> Tag format
  |> Recordheader short and long
    |> some magic going on here - page 29